#!/usr/bin/env python

import csv
import sys
import os

from lapchart_data import chartdata
from lapchart_gui import LapChartGUI

def load_passings(data, path):
    with open(path, 'rb') as pfile:
        reader = csv.DictReader(pfile, delimiter='\t', quoting=csv.QUOTE_NONE)
        for row in reader:
            car_no = row['No.']
            if car_no == '' or car_no == '??': continue
            lap = int(row['Laps'].strip('P '))
            if lap <= 0: continue
            lead = int(row['Lead'])
            class_ = row['Class']
            driver = row['Name']
            car_id = car_no + '_' + class_ + '_' + driver
            car = data.car(car_id, car_no, create=True)
            car.car_no(car_no)
            car.class_(class_)
            if lap <= car.laps(): continue
            data.add(car_id, lap=lap, lead=lead)

def save_ps(data, path):
    if hasattr(sys, "frozen"):
        mainprog = sys.executable
    else:
        mainprog = sys.argv[0]
    tpath = os.path.join(os.path.dirname(mainprog), 'template.ps')
    with open(tpath, 'r') as template, open(path, 'w') as output:
        for line in template:
            if line.strip() == '%%Insert-Chart-Here':
                laps = data.num_laps()
                output.write("%d %d ChartFrame\n" % (laps, data.max_pos()))
                output.write("ChartModePlain\n")
                mode = "Plain"
                for lap in range(1, 1+laps):
                    for pos in range(1, 1+data.max_pos(lap)):
                        cell = data.lookup(lap, pos)
                        lead = cell.lead()
                        bars = cell.bars()

                        if lead == laps: newmode = "Final"
                        elif lead % 5:   newmode = "Plain"
                        elif lead % 10:  newmode = "Odd"
                        else:            newmode = "Even"
                        if mode != newmode:
                            output.write("ChartMode%s\n" % newmode)
                            mode = newmode
                        output.write("%d %d (%s) ChartCell\n" %
                                (lap, pos, cell.car().car_no()))
                        if bars[0]:
                            output.write("%d %d ChartBarAbove\n" % (lap, pos))
                        if bars[1]:
                            output.write("%d %d ChartBarLeft\n" % (lap, pos))
            else:
                output.write(line)

if __name__ == '__main__':
    if len(sys.argv) > 2:
        data = chartdata()
        load_passings(data, sys.argv[1])
        save_ps(data, sys.argv[2])
        sys.exit(0)

    gui = LapChartGUI()

    if len(sys.argv) > 1:
        load_passings(gui.data, sys.argv[1])
    else:
        gui.data.add('10') # 1, 1
        gui.data.add('2',) # 1, 2
        gui.data.add('08') # 1, 3
        gui.data.add('55') # 1, 4
        gui.data.add('42') # 1, 5
        gui.data.add('10') # 2, 1
        gui.data.add('08') # 2, 2
        gui.data.add('2',) # 2, 3
        gui.data.add('55') # 2, 4
        gui.data.add('08') # 3, 1
        gui.data.add('42') # 2, 5
        gui.data.add('10') # 3, 2
        gui.data.add('2',) # 3, 3
        gui.data.add('55') # 3, 4
        gui.data.add('15', 1,15)
        gui.data.add('1', 14, 1)

    gui.mainloop()
